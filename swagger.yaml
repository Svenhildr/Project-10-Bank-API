# swagger: '2.0'
# info:
#   title: Bank Argent API documentation
#   description: Contains all available API endpoints in this codebase
#   version: '1.0.0'
#   termsOfService: 'http://swagger.io/terms/'
# host: localhost:3001
# basePath: /api/v1
# schemes:
#   - http
# paths:
#   /user/login:
#     post:
#       tags:
#         - User Module
#       summary: Login
#       description: API for Login
#       parameters:
#         - in: body
#           name: body
#           description: Login Payload
#           required: true
#           schema:
#             $ref: '#/definitions/Login'
#       produces:
#         - application/json
#       responses:
#         '200':
#           description: Login Successfully
#           schema:
#             $ref: '#/definitions/LoginResponse'
#         '400':
#           description: Invalid Fields
#         '500':
#           description: Internal Server Error
#   /user/signup:
#     post:
#       tags:
#         - User Module
#       summary: Signup
#       description: API for Signup
#       parameters:
#         - in: body
#           name: body
#           description: Signup Payload
#           required: true
#           schema:
#             $ref: '#/definitions/User'
#       produces:
#         - application/json
#       responses:
#         '200':
#           description: Signup Successfully
#           schema:
#             $ref: '#/definitions/ApiResponse'
#         '400':
#           description: Invalid Fields
#         '500':
#           description: Internal Server Error
#   /user/profile:
#     post:
#       security:
#         - Bearer: []
#       tags:
#         - User Module
#       summary: User Profile API
#       description: API for fetching a user profile
#       parameters:
#         - in: header
#           name: Authorization
#           description: Attach Bearer JWT token
#           required: true
#       produces:
#         - application/json
#       responses:
#         '200':
#           description: User profile retrieved successully
#           schema:
#             $ref: '#/definitions/ApiResponse'
#         '400':
#           description: Invalid Fields
#         '500':
#           description: Internal Server Error
#     put:
#       security:
#         - Bearer: []
#       tags:
#         - User Module
#       summary: User Profile API
#       description: API for updating a user profile
#       parameters:
#         - in: header
#           name: Authorization
#           description: Attach Bearer JWT token
#           required: true
#         - in: body
#           name: body
#           description: Update user profile attributes
#           required: true
#           schema:
#             $ref: '#/definitions/UserProfile'
#       produces:
#         - application/json
#       responses:
#         '200':
#           description: User profile retrieved successully
#           schema:
#             $ref: '#/definitions/ApiResponse'
#         '400':
#           description: Invalid Fields
#         '500':
#           description: Internal Server Error
# securityDefinitions:
#   Bearer:
#     type: apiKey
#     name: Authorization
#     in: header
# definitions:
#   User:
#     properties:
#       email:
#         type: string
#         description: user email
#       password:
#         type: string
#         description: user password
#       firstName:
#         type: string
#         description: user first name
#       lastName:
#         type: string
#         description: user last name
#   Login:
#     properties:
#       email:
#         type: string
#         description: user email
#       password:
#         type: string
#         description: user password
#   ApiResponse:
#     type: object
#     properties:
#       status:
#         type: integer
#       message:
#         type: string
#       body:
#         type: object
#         properties:
#           id:
#             type: string
#           email:
#             type: string
#   LoginResponse:
#     type: object
#     properties:
#       token:
#         type: string
#   UserProfile:
#     type: object
#     properties:
#       firstName:
#         type: string
#       lastName:
#         type: string

swagger: "2.0"
info:
    title: Bank Argent API documentation
    description: Contains all available API endpoints in this codebase
    version: "1.0.0"
    termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
    - http
paths:
    /user/login:
        post:
            tags:
                - User Module
            summary: Login
            description: API for Login
            parameters:
                - in: body
                  name: body
                  description: Login Payload
                  required: true
                  schema:
                      $ref: "#/definitions/Login"
            produces:
                - application/json
            responses:
                "200":
                    description: Login Successfully
                    schema:
                        $ref: "#/definitions/LoginResponse"
                "400":
                    description: Invalid Fields
                "500":
                    description: Internal Server Error
    /user/signup:
        post:
            tags:
                - User Module
            summary: Signup
            description: API for Signup
            parameters:
                - in: body
                  name: body
                  description: Signup Payload
                  required: true
                  schema:
                      $ref: "#/definitions/User"
            produces:
                - application/json
            responses:
                "200":
                    description: Signup Successfully
                    schema:
                        $ref: "#/definitions/ApiResponse"
                "400":
                    description: Invalid Fields
                "500":
                    description: Internal Server Error
    /user/profile:
        post:
            security:
                - Bearer: []
            tags:
                - User Module
            summary: User Profile API
            description: API for fetching a user profile
            parameters:
                - in: header
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: User profile retrieved successfully
                    schema:
                        $ref: "#/definitions/ApiResponse"
                "400":
                    description: Invalid Fields
                "500":
                    description: Internal Server Error
        put:
            security:
                - Bearer: []
            tags:
                - User Module
            summary: User Profile API
            description: API for updating a user profile
            parameters:
                - in: header
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                  type: string
                - in: body
                  name: body
                  description: Update user profile attributes
                  required: true
                  schema:
                      $ref: "#/definitions/UserProfile"
            produces:
                - application/json
            responses:
                "200":
                    description: User profile updated successfully
                    schema:
                        $ref: "#/definitions/ApiResponse"
                "400":
                    description: Invalid Fields
                "500":
                    description: Internal Server Error

    /accounts/{accountId}/transactions:
        get:
            tags:
                - Transactions Module
            summary: View transactions for the current month
            description: Retrieves all transactions for a given account for the current month.
            parameters:
                - name: accountId
                  in: path
                  required: true
                  type: string
                - name: month
                  in: query
                  required: false
                  type: integer
                - name: year
                  in: query
                  required: false
                  type: integer
            produces:
                - application/json
            responses:
                "200":
                    description: Transactions retrieved successfully
                    schema:
                        type: array
                        items:
                            $ref: "#/definitions/Transaction"
                "404":
                    description: Account not found
                "500":
                    description: Internal Server Error
        post:
            tags:
                - Transactions Module
            summary: Add a new transaction
            description: Adds a new transaction to the specified account.
            parameters:
                - name: accountId
                  in: path
                  required: true
                  type: string
                - in: body
                  name: transaction
                  description: Transaction details
                  required: true
                  schema:
                      $ref: "#/definitions/TransactionInput"
            produces:
                - application/json
            responses:
                "201":
                    description: Transaction created successfully
                "400":
                    description: Bad Request
                "500":
                    description: Internal Server Error

    /transactions/{transactionId}:
        get:
            tags:
                - Transactions Module
            summary: View transaction details
            description: Retrieves the details of a specific transaction.
            parameters:
                - name: transactionId
                  in: path
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "200":
                    description: Transaction details retrieved successfully
                    schema:
                        $ref: "#/definitions/Transaction"
                "404":
                    description: Transaction not found
                "500":
                    description: Internal Server Error
        put:
            tags:
                - Transactions Module
            summary: Update a transaction
            description: Updates a specific transaction.
            parameters:
                - name: transactionId
                  in: path
                  required: true
                  type: string
                - in: body
                  name: transaction
                  description: Transaction details to be updated
                  required: true
                  schema:
                      $ref: "#/definitions/TransactionInput"
            produces:
                - application/json
            responses:
                "200":
                    description: Transaction updated successfully
                "400":
                    description: Bad Request
                "404":
                    description: Transaction not found
                "500":
                    description: Internal Server Error
        delete:
            tags:
                - Transactions Module
            summary: Delete a transaction
            description: Deletes a specific transaction.
            parameters:
                - name: transactionId
                  in: path
                  required: true
                  type: string
            produces:
                - application/json
            responses:
                "204":
                    description: Transaction deleted successfully
                "404":
                    description: Transaction not found
                "500":
                    description: Internal Server Error

securityDefinitions:
    Bearer:
        type: apiKey
        name: Authorization
        in: header

definitions:
    User:
        properties:
            email:
                type: string
                description: user email
            password:
                type: string
                description: user password
            firstName:
                type: string
                description: user first name
            lastName:
                type: string
                description: user last name
    Login:
        properties:
            email:
                type: string
                description: user email
            password:
                type: string
                description: user password
    ApiResponse:
        type: object
        properties:
            status:
                type: integer
            message:
                type: string
            body:
                type: object
                properties:
                    id:
                        type: string
                    email:
                        type: string
    LoginResponse:
        type: object
        properties:
            token:
                type: string
    UserProfile:
        type: object
        properties:
            firstName:
                type: string
            lastName:
                type: string
    Transaction:
        properties:
            id:
                type: string
            accountId:
                type: string
            amount:
                type: number
            date:
                type: string
                format: date
            description:
                type: string
    TransactionInput:
        properties:
            amount:
                type: number
            date:
                type: string
                format: date
            description:
                type: string
